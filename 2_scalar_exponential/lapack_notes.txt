Lapac notes

#include <gmd.h> to use LaGenMatDouble Class

LaGenMatDouble LaGenMatDouble::diag ( ) const
    Returns a newly allocated column vector of dimension Nx1 that contains the diagonal of the given matrix. (New in lapackpp-2.4.5)

file dsyev.f  dsyev.f plus dependencies
prec double
for  Computes all eigenvalues, and optionally, eigenvectors of a real
,    symmetric matrix.
gams d4a1



double* elements = new double[n*n]; 

LaGenMatDouble spins = LaGenMatDouble( elements, n, n, row_ordering = true);

delete [] elements; // we created a new array on the heap, so lets make sure we delete it

cout << "Spins matrix:" << endl << spins << endl;

LaGenMatDouble diag = LaGenMatDouble( n, n );

diag = spins.diag();

cout << "Diagonal matrix from spins" << endl << diag << endl;

LaGenMatDouble result = LaGenMatDouble( n, n );

// here we will show what power of 2 would look like

Blas_Mat_Mat_Mult ( const &diag, const &diag, &result, alpha = 1.0, beta = 0.0 );
// this will output, effectively, diag^2 in to the result object, to continue doing the power we might do:

Blas_Mat_Mat_Mult ( const &result, const &diag, &result, alpha = 1.0, beta = 0.0 );
// note, this might error because we are passing &result as a variable and a const, if this is the case the best way around would be to create a *new* result variable, and just iterate etc etc'

// i'm not sure if these things will error, you may have to initialize the diag and result (spins should be aite though)
